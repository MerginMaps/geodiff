name: Build and upload to PyPI

on: [push]
jobs:
  build_linux_wheels_manylinux_2_24:
    name: Build wheels for manylinux_2_24
    runs-on: ubuntu-latest
    env:
      CIBW_SKIP: pp* cp27-* cp35-* *-i686
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
      CIBW_MANYLINUX_I686_IMAGE: manylinux_2_24
      CIBW_BEFORE_ALL_LINUX: apt-get update -y && apt-get install libsqlite3-dev
      CIBW_BEFORE_BUILD: pip install setuptools scikit-build wheel cmake
      CIBW_TEST_COMMAND: python -c "import pygeodiff; pygeodiff.GeoDiff().version()"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_linux_wheels_manylinux2014:
    name: Build wheels for manylinux2014
    runs-on: ubuntu-latest
    env:
      CIBW_SKIP: pp* cp27-* cp35-* *-i686
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      CIBW_MANYLINUX_I686_IMAGE: manylinux2014
      CIBW_BEFORE_ALL_LINUX: yum install -y sqlite-devel
      CIBW_BEFORE_BUILD: pip install setuptools scikit-build wheel cmake
      CIBW_TEST_COMMAND: python -c "import pygeodiff; pygeodiff.GeoDiff().version()"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_windows_wheels:
    name: Build wheels on windows-latest
    runs-on: windows-latest
    env:
      CMAKE_GENERATOR: "Visual Studio 16 2019"
      SQLite3_ROOT: "C:/vcpkg/installed/x64-windows"
      CIBW_SKIP: cp27-* cp35-* *-win32
      CIBW_TEST_COMMAND: python -c "import pygeodiff; pygeodiff.GeoDiff().version()"
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair --add-path C:/vcpkg/installed/x64-windows/bin --no-mangle-all -v -w {dest_dir} {wheel}"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install Deps
        run: |
          C:/vcpkg/vcpkg install sqlite3 --triplet x64-windows
          pip install setuptools scikit-build wheel cmake delvewheel
          dir "C:/vcpkg/installed/x64-windows/bin"

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_windows_32_wheels:
    name: Build 32bit wheels on windows-latest
    runs-on: windows-latest
    env:
      CMAKE_GENERATOR: "Visual Studio 16 2019"
      CMAKE_GENERATOR_PLATFORM: "Win32"
      SQLite3_ROOT: "C:/vcpkg/installed/x86-windows"
      CIBW_SKIP: cp27-* cp35-* pp* *-win_amd64
      CIBW_TEST_COMMAND: python -c "import pygeodiff; pygeodiff.GeoDiff().version()"
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair --add-path C:/vcpkg/installed/x86-windows/bin --no-mangle-all -v -w {dest_dir} {wheel}"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'
          architecture: x86

      - name: Install Deps
        run: |
          C:/vcpkg/vcpkg install sqlite3 --triplet x86-windows
          pip install setuptools scikit-build wheel cmake delvewheel
          dir "C:/vcpkg/installed/x86-windows/bin"

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_macos_wheels:
    name: Build wheels on macos-latest
    runs-on: macos-latest
    env:
        SQLite3_ROOT: /usr/local/opt/sqlite
        CIBW_SKIP: cp27-* cp35-*
        CIBW_TEST_COMMAND: python -c "import pygeodiff; pygeodiff.GeoDiff().version()"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install Deps
        run: |
          brew install sqlite3
          pip install setuptools scikit-build wheel cmake nose2

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install setuptools twine scikit-build wheel cmake
        
      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_windows_wheels, build_linux_wheels_manylinux_2_24, build_linux_wheels_manylinux2014, build_macos_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # To test: repository_url: https://test.pypi.org/legacy/
